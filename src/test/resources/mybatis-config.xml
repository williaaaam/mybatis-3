<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2009-2022 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

  <properties resource="jdbc.properties"/>

  <settings>
    <!--全局性地开启或关闭所有映射器配置文件中已配置的任何缓存，一级缓存-->
    <setting name="cacheEnabled" value="true"/>
    <!--延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态。-->
    <setting name="lazyLoadingEnabled" value="false"/>
    <!--开启时，任一方法的调用都会加载该对象的所有延迟加载属性。 否则，每个延迟加载属性会按需加载（参考 lazyLoadTriggerMethods)。-->
    <!--在 3.4.1 及之前的版本中默认为 true-->
    <setting name="aggressiveLazyLoading" value="false"/>
    <!--是否允许单个语句返回多结果集（需要数据库驱动支持）。-->
    <setting name="multipleResultSetsEnabled" value="true"/>
    <!--使用列标签代替列名。实际表现依赖于数据库驱动，具体可参考数据库驱动的相关文档，或通过对比测试来观察。-->
    <setting name="useColumnLabel" value="true"/>
    <!--允许 JDBC 支持自动生成主键，需要数据库驱动支持。如果设置为 true，将强制使用自动生成主键。尽管一些数据库驱动不支持此特性，但仍可正常工作（如 Derby）。-->
    <setting name="useGeneratedKeys" value="false"/>
    <!--指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示关闭自动映射；PARTIAL 只会自动映射没有定义嵌套结果映射的字段。 FULL 会自动映射任何复杂的结果集（无论是否嵌套）。-->
    <setting name="autoMappingBehavior" value="PARTIAL"/>
    <!--指定发现自动映射目标未知列（或未知属性类型）的行为。
      NONE: 不做任何反应
      WARNING: 输出警告日志（'org.apache.ibatis.session.AutoMappingUnknownColumnBehavior' 的日志等级必须设置为 WARN）
      FAILING: 映射失败 (抛出 SqlSessionException)
    -->
    <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
    <!--配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（PreparedStatement）； BATCH 执行器不仅重用语句还会执行批量更新。-->
    <setting name="defaultExecutorType" value="SIMPLE"/>
    <!--设置超时时间，它决定数据库驱动等待数据库响应的秒数。-->
    <setting name="defaultStatementTimeout" value="25"/>
    <!--为驱动的结果集获取数量（fetchSize）设置一个建议值。此参数只可以在查询设置中被覆盖。-->
    <setting name="defaultFetchSize" value="100"/>
    <!--是否允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为 false。-->
    <setting name="safeRowBoundsEnabled" value="false"/>
    <!--是否开启驼峰命名自动映射，即从经典数据库列名 A_COLUMN 映射到经典 Java 属性名 aColumn。-->
    <!--解决SqlSession#getMapper()方法执行sql语句时警告：Unknown column is detected on 'org.apache.ibatis.example.ProductionMapper.selectPK' auto-mapping. Mapping parameters are [columnName=update_time,propertyName=update_time,propertyType=null]-->
    <setting name="mapUnderscoreToCamelCase" value="true"/>
    <!--MyBatis 利用本地缓存机制（Local Cache）防止循环引用和加速重复的嵌套查询。 默认值为 SESSION，会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地缓存将仅用于执行语句，对相同 SqlSession 的不同查询将不会进行缓存。-->
    <setting name="localCacheScope" value="SESSION"/>
    <!--当没有为参数指定特定的 JDBC 类型时，空值的默认 JDBC 类型。 某些数据库驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER。-->
    <setting name="jdbcTypeForNull" value="OTHER"/>
    <!--指定对象的哪些方法触发一次延迟加载。用逗号分隔的方法列表。-->
    <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
    <!--<setting name="vfsImpl" value=""/>-->
  </settings>

  <!--类型别名可为 Java 类型设置一个缩写名字。 它仅用于 XML 配置，意在降低冗余的全限定类名书写-->
  <typeAliases>
    <typeAlias alias="ProductionMapper" type="org.apache.ibatis.example.ProductionMapper"/>
  </typeAliases>

  <environments default="development">
    <environment id="development">
      <transactionManager type="JDBC"/>
      <!--PooledDataSourceFactory-->
      <dataSource type="POOLED">
        <property name="driver" value="${driver}"/>
        <!--<property name="org.apache.ibatis.parsing.PropertyParser.enable-default-value" value="true"/>--> <!-- 启用默认值特性 -->
        <!--从Mybatis 3.4.2开始，可以为占位符指定默认值，如果属性driver没有被配置，'com.mysql.cj.jdbc.Driver将被视为默认值'；这个特定默认是关闭的，-->
        <!--<property name="driver" value="${driver:com.mysql.cj.jdbc.Driver}"/>-->
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
      </dataSource>
    </environment>
  </environments>

  <mappers>
    <!--resource class url 最多只能同时指定一个-->
    <mapper resource="mapper/ProductionMapper.xml"/>
    <!--<mapper class="org.apache.ibatis.example.ProductionMapper"/>-->
  </mappers>

</configuration>
